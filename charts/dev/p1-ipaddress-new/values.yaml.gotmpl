env:
  PROJECT_ID: {{ .Values.gcpProject }}
  NODE_ENV: {{ .Values.env_id }}

serviceAccount:
  annotations:
    iam.gke.io/gcp-service-account: p1-ipaddress@{{ default .Values.gcpProject .Values.serviceAccount.gcpProject }}.iam.gserviceaccount.com

addtionalContainers:
- name: cloud-sql-proxy
  # It is recommended to use the latest version of the Cloud SQL proxy
  # Make sure to update on a regular schedule!
  image: gcr.io/cloudsql-docker/gce-proxy:1.29.0
  command:
    - "/cloud_sql_proxy"
    #
    # If connecting from a VPC-native GKE cluster, you can use the
    # following flag to have the proxy connect over private IP
    # - "-ip_address_types=PRIVATE"
    #
    # By default, the proxy will write all logs to stderr. In some
    # environments, anything printed to stderr is consider an error. To
    # disable this behavior and write all logs to stdout (except errors
    # which will still go to stderr), use:
    - "-log_debug_stdout"
    # Replace DB_PORT with the port the proxy should listen on
    # Defaults: MySQL: 3306, Postgres: 5432, SQLServer: 1433
    - "-instances={{ default .Values.gcpProject .Values.cloudSQLDatabase.gcpProject }}:{{ .Values.cloudSQLDatabase.region }}:{{ .Values.cloudSQLDatabase.instanceName }}=tcp:3306"
  securityContext:
    # The default Cloud SQL proxy image runs as the
    # "nonroot" user and group (uid: 65532) by default.
    runAsNonRoot: true
  resources:
    requests:
      # The proxy's memory use scales linearly with the number of active
      # connections. Fewer open connections will use less memory. Adjust
      # this value based on your application's requirements.
      memory: "128Mi"
      # The proxy's CPU use scales linearly with the amount of IO between
      # the database and the application. Adjust this value based on your
      # application's requirements.
      cpu:    "0.2"